<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Fossix</title><link>https://fossix.org/tags/docker/</link><description>Recent content in docker on Fossix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 14 Aug 2018 11:29:17 +0530</lastBuildDate><atom:link href="https://fossix.org/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Dockerize go programs</title><link>https://fossix.org/posts/2018-08-14-golang-docker/</link><pubDate>Tue, 14 Aug 2018 11:29:17 +0530</pubDate><guid>https://fossix.org/posts/2018-08-14-golang-docker/</guid><description>Assume this is the production grade program we need to dockerize and run.
package main import &amp;quot;fmt&amp;quot; func main() { fmt.Println(&amp;quot;saying hello to the world&amp;quot;) } FROM golang:1.10-alpine as builder WORKDIR /go/src/github.com/shabinesh/prog COPY main.go . COPY vendor ./vendor RUN CGO_ENABLED=0 go build -o main . FROM alpine:latest RUN apk --no-cache add ca-certificates WORKDIR / COPY --from=0 /go/src/github.com/shabinesh/prog/main . CMD [&amp;quot;./main&amp;quot;]</description></item></channel></rss>