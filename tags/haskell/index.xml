<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>haskell on Fossix</title><link>https://fossix.org/tags/haskell/</link><description>Recent content in haskell on Fossix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 23 Dec 2018 11:29:17 +0530</lastBuildDate><atom:link href="https://fossix.org/tags/haskell/index.xml" rel="self" type="application/rss+xml"/><item><title>Haskell functions</title><link>https://fossix.org/posts/2018-12-22-haskool/</link><pubDate>Sun, 23 Dec 2018 11:29:17 +0530</pubDate><guid>https://fossix.org/posts/2018-12-22-haskool/</guid><description>Writing a simple named function sq :: Integer -&amp;gt; Integer sq n = n * n :: can be read as &amp;lsquo;has the type&amp;rsquo;. Here sq is the function name which takes an integer and returns an integer.
mul :: Integer -&amp;gt; Integer -&amp;gt; Integer mul a b = a * b the first line is type signature, while this is useful, it is not required, as haskell compiler can infer the type automatically.</description></item></channel></rss>