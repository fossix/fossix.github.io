<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fork on Fossix</title><link>https://fossix.org/tags/fork/</link><description>Recent content in fork on Fossix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 24 Mar 2017 14:11:53 +0530</lastBuildDate><atom:link href="https://fossix.org/tags/fork/index.xml" rel="self" type="application/rss+xml"/><item><title>The fork() system call</title><link>https://fossix.org/posts/2013-07-24-the-fork-system-call/</link><pubDate>Fri, 24 Mar 2017 14:11:53 +0530</pubDate><guid>https://fossix.org/posts/2013-07-24-the-fork-system-call/</guid><description>As we know system calls take us from the user-land to the kernel-land. As mentioned earlier this article will describe even the very obvious details, so pardon the gory details. The different things that happen in the kernel during the start up of a process is what we will discuss in this section.
As seen in the last code listing, the shell does a fork() and calls exec family of system calls to overlay the command image onto the newly created child processâ€™ address space.</description></item></channel></rss>