<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>concurrency on Fossix</title><link>https://fossix.org/tags/concurrency/</link><description>Recent content in concurrency on Fossix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Nov 2018 11:29:17 +0530</lastBuildDate><atom:link href="https://fossix.org/tags/concurrency/index.xml" rel="self" type="application/rss+xml"/><item><title>Concurrency notes</title><link>https://fossix.org/posts/2018-11-14-golang-concurrency/</link><pubDate>Wed, 14 Nov 2018 11:29:17 +0530</pubDate><guid>https://fossix.org/posts/2018-11-14-golang-concurrency/</guid><description>Deadlock package main import ( &amp;quot;fmt&amp;quot; &amp;quot;sync&amp;quot; &amp;quot;time&amp;quot; ) type value struct { mu sync.Mutex v int } var wg sync.WaitGroup func print(i, j *value) { defer wg.Done() i.mu.Lock() defer i.mu.Unlock() time.Sleep(2 * time.Second) j.mu.Lock() defer j.mu.Unlock() fmt.Print(i.v + j.v) } func main() { a := &amp;amp;value{v: 1} b := &amp;amp;value{v: 2} var wg sync.WaitGroup wg.Add(2) go print(a, b) go print(b, a) wg.Wait() fmt.Println(&amp;quot;reached here?&amp;quot;) } Are they meeting coffman conditions:</description></item></channel></rss>