<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>syscall on Fossix</title><link>https://fossix.org/tags/syscall/</link><description>Recent content in syscall on Fossix</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 25 Mar 2017 14:11:53 +0530</lastBuildDate><atom:link href="https://fossix.org/tags/syscall/index.xml" rel="self" type="application/rss+xml"/><item><title>The exec() system call</title><link>https://fossix.org/posts/2013-07-25-the-exec-system-call/</link><pubDate>Sat, 25 Mar 2017 14:11:53 +0530</pubDate><guid>https://fossix.org/posts/2013-07-25-the-exec-system-call/</guid><description>After a successful fork() the child process will start to execute the command typed by the user, in our case the a.out file. This execution is started by the exec system call. The job of the system call is to overlay the calling process’ address space with the executable image and give control to it. The exec() syscall does the following functions:
The files shared by the parent and child processes are unshared, a new unknown executable shouldn’t be sharing files with the shell The executable file is opened and checked for permissions whether the new file has executable and open permission for the current user.</description></item><item><title>The fork() system call</title><link>https://fossix.org/posts/2013-07-24-the-fork-system-call/</link><pubDate>Fri, 24 Mar 2017 14:11:53 +0530</pubDate><guid>https://fossix.org/posts/2013-07-24-the-fork-system-call/</guid><description>As we know system calls take us from the user-land to the kernel-land. As mentioned earlier this article will describe even the very obvious details, so pardon the gory details. The different things that happen in the kernel during the start up of a process is what we will discuss in this section.
As seen in the last code listing, the shell does a fork() and calls exec family of system calls to overlay the command image onto the newly created child process’ address space.</description></item></channel></rss>